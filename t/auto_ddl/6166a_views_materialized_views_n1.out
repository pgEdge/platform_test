-- Create user schema for testing
CREATE SCHEMA test_schema;
INFO:  DDL statement replicated.
CREATE SCHEMA
SET search_path TO test_schema, public;
SET
-- Create a base table with a primary key
CREATE TABLE test_tbl (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    age INT
);
INFO:  DDL statement replicated.
CREATE TABLE
-- Create a base table without a primary key
CREATE TABLE test_tbl_no_pk (
    id INT,
    description TEXT
);
INFO:  DDL statement replicated.
CREATE TABLE
-- Insert data into base tables
INSERT INTO test_tbl (id, name, age) VALUES
(1, 'Alice', 30), (2, 'Bob', 25), (3, 'Carol', 35);
INSERT 0 3
INSERT INTO test_tbl_no_pk (id, description) VALUES
(1, 'First description'), (2, 'Second description');
INSERT 0 2
-- Create a simple view
CREATE VIEW view_test_1 AS
SELECT * FROM test_tbl;
INFO:  DDL statement replicated.
CREATE VIEW
-- Create a view with a WHERE clause
CREATE VIEW view_test_2 AS
SELECT * FROM test_tbl WHERE age > 30;
INFO:  DDL statement replicated.
CREATE VIEW
-- Create or replace a view
CREATE OR REPLACE VIEW view_test_1 AS
SELECT id, name, age FROM test_tbl WHERE age > 25;
INFO:  DDL statement replicated.
CREATE VIEW
-- Create a recursive view
CREATE OR REPLACE VIEW view_recursive AS 
WITH RECURSIVE cte AS (
    SELECT 1 AS n
    UNION ALL
    SELECT n + 1 FROM cte WHERE n < 5
)
SELECT * FROM cte;
INFO:  DDL statement replicated.
CREATE VIEW
-- Create a view with options
CREATE VIEW view_with_options WITH (security_barrier=true) AS
SELECT * FROM test_tbl;
INFO:  DDL statement replicated.
CREATE VIEW
-- Create a view with check option
CREATE VIEW view_with_check_option AS 
SELECT * FROM test_tbl WHERE age > 25 WITH LOCAL CHECK OPTION;
INFO:  DDL statement replicated.
CREATE VIEW
------------------------------
-- Create a materialized view
-------------------------------
CREATE MATERIALIZED VIEW mv_test_view AS
SELECT id, name, age FROM test_tbl WHERE age > 30;
WARNING:  DDL statement replicated, but could be unsafe.
SELECT 1
-- Create a materialized view with "WITH NO DATA"
CREATE MATERIALIZED VIEW mv_test_view_nodata AS
SELECT id, name, age FROM test_tbl WHERE age > 30 WITH NO DATA;
WARNING:  DDL statement replicated, but could be unsafe.
CREATE MATERIALIZED VIEW
-- Refresh the materialized view
REFRESH MATERIALIZED VIEW mv_test_view_nodata;
INFO:  DDL statement replicated.
REFRESH MATERIALIZED VIEW
-- Create a materialized view with specific column names
CREATE MATERIALIZED VIEW mv_test_view_colnames (person_id, person_name, person_age) AS
SELECT id, name, age FROM test_tbl WHERE age > 30;
WARNING:  DDL statement replicated, but could be unsafe.
SELECT 1
-- Create a materialized view using a specific method
CREATE MATERIALIZED VIEW mv_test_view_method AS 
SELECT id, name, age FROM test_tbl WHERE age > 30;
WARNING:  DDL statement replicated, but could be unsafe.
SELECT 1
-- Create a materialized view with storage parameters
CREATE MATERIALIZED VIEW mv_test_view_storage WITH (fillfactor = 70) AS
SELECT id, name, age FROM test_tbl WHERE age > 30;
WARNING:  DDL statement replicated, but could be unsafe.
SELECT 1
-- Create a materialized view in a specific tablespace
CREATE MATERIALIZED VIEW mv_test_view_tablespace TABLESPACE pg_default AS 
SELECT id, name, age FROM test_tbl WHERE age > 30;
WARNING:  DDL statement replicated, but could be unsafe.
SELECT 1
-- Reset search_path to default
RESET search_path;
RESET
-- Create a simple view in the default schema
CREATE VIEW public.view_test_default AS
SELECT * FROM test_schema.test_tbl_no_pk;
INFO:  DDL statement replicated.
CREATE VIEW
-- Create or replace a view in the default schema
CREATE OR REPLACE VIEW public.view_test_default AS
SELECT id, description FROM test_schema.test_tbl_no_pk WHERE id > 1;
INFO:  DDL statement replicated.
CREATE VIEW
--creating views and materialized views that depend on other views
-- Create a view that depends on another view
CREATE VIEW test_schema.view_depends_on_default AS
SELECT id, description FROM public.view_test_default WHERE id > 1;
INFO:  DDL statement replicated.
CREATE VIEW
-- Create a materialized view that depends on a view in another schema
CREATE MATERIALIZED VIEW public.mv_depends_on_test_schema AS
SELECT id, name, age FROM test_schema.mv_test_view;
WARNING:  DDL statement replicated, but could be unsafe.
SELECT 1
-- Create a new view that depends on the materialized view public.mv_depends_on_test_schema
CREATE VIEW public.view_depends_on_mv AS
SELECT id, name FROM public.mv_depends_on_test_schema WHERE age > 30;
INFO:  DDL statement replicated.
CREATE VIEW
-- Create a new materialized view that depends on a regular view
CREATE MATERIALIZED VIEW public.mv_depends_on_mv AS
SELECT id, name FROM public.view_depends_on_mv;
WARNING:  DDL statement replicated, but could be unsafe.
SELECT 1
-- Validations
-- Validate structure and data in views
-- Validation for view_test_1
\d+ test_schema.view_test_1
                              View "test_schema.view_test_1"
 Column |         Type          | Collation | Nullable | Default | Storage  | Description 
--------+-----------------------+-----------+----------+---------+----------+-------------
 id     | integer               |           |          |         | plain    | 
 name   | character varying(50) |           |          |         | extended | 
 age    | integer               |           |          |         | plain    | 
View definition:
 SELECT id,
    name,
    age
   FROM test_schema.test_tbl
  WHERE age > 25;

-- Expect 2 rows: Alice, Carol
SELECT * FROM test_schema.view_test_1 ORDER BY id; 
 id | name  | age 
----+-------+-----
  1 | Alice |  30
  3 | Carol |  35
(2 rows)

-- Validation for view_test_2
\d+ test_schema.view_test_2
                              View "test_schema.view_test_2"
 Column |         Type          | Collation | Nullable | Default | Storage  | Description 
--------+-----------------------+-----------+----------+---------+----------+-------------
 id     | integer               |           |          |         | plain    | 
 name   | character varying(50) |           |          |         | extended | 
 age    | integer               |           |          |         | plain    | 
View definition:
 SELECT id,
    name,
    age
   FROM test_schema.test_tbl
  WHERE age > 30;

-- Expect 1 row: Carol
SELECT * FROM test_schema.view_test_2 ORDER BY id; 
 id | name  | age 
----+-------+-----
  3 | Carol |  35
(1 row)

-- Validation for view_recursive
\d+ test_schema.view_recursive
                     View "test_schema.view_recursive"
 Column |  Type   | Collation | Nullable | Default | Storage | Description 
--------+---------+-----------+----------+---------+---------+-------------
 n      | integer |           |          |         | plain   | 
View definition:
 WITH RECURSIVE cte AS (
         SELECT 1 AS n
        UNION ALL
         SELECT cte_1.n + 1
           FROM cte cte_1
          WHERE cte_1.n < 5
        )
 SELECT n
   FROM cte;

-- Expect 5 rows: 1, 2, 3, 4, 5
SELECT * FROM test_schema.view_recursive ORDER BY n; 
 n 
---
 1
 2
 3
 4
 5
(5 rows)

-- Validation for view_with_options
\d+ test_schema.view_with_options
                           View "test_schema.view_with_options"
 Column |         Type          | Collation | Nullable | Default | Storage  | Description 
--------+-----------------------+-----------+----------+---------+----------+-------------
 id     | integer               |           |          |         | plain    | 
 name   | character varying(50) |           |          |         | extended | 
 age    | integer               |           |          |         | plain    | 
View definition:
 SELECT id,
    name,
    age
   FROM test_schema.test_tbl;
Options: security_barrier=true

-- Expect 3 rows: Alice, Bob, Carol
SELECT * FROM test_schema.view_with_options ORDER BY id; 
 id | name  | age 
----+-------+-----
  1 | Alice |  30
  2 | Bob   |  25
  3 | Carol |  35
(3 rows)

-- Validation for view_with_check_option
\d+ test_schema.view_with_check_option
                        View "test_schema.view_with_check_option"
 Column |         Type          | Collation | Nullable | Default | Storage  | Description 
--------+-----------------------+-----------+----------+---------+----------+-------------
 id     | integer               |           |          |         | plain    | 
 name   | character varying(50) |           |          |         | extended | 
 age    | integer               |           |          |         | plain    | 
View definition:
 SELECT id,
    name,
    age
   FROM test_schema.test_tbl
  WHERE age > 25;
Options: check_option=local

-- Expect 2 rows: Alice, Carol
SELECT * FROM test_schema.view_with_check_option ORDER BY id; 
 id | name  | age 
----+-------+-----
  1 | Alice |  30
  3 | Carol |  35
(2 rows)

-- Validation for mv_test_view
\d+ test_schema.mv_test_view
                                     Materialized view "test_schema.mv_test_view"
 Column |         Type          | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
--------+-----------------------+-----------+----------+---------+----------+-------------+--------------+-------------
 id     | integer               |           |          |         | plain    |             |              | 
 name   | character varying(50) |           |          |         | extended |             |              | 
 age    | integer               |           |          |         | plain    |             |              | 
View definition:
 SELECT id,
    name,
    age
   FROM test_schema.test_tbl
  WHERE age > 30;
Access method: heap

-- Expect 1 row: Carol
SELECT * FROM test_schema.mv_test_view ORDER BY id; 
 id | name  | age 
----+-------+-----
  3 | Carol |  35
(1 row)

-- Validation for mv_test_view_nodata
\d+ test_schema.mv_test_view_nodata
                                  Materialized view "test_schema.mv_test_view_nodata"
 Column |         Type          | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
--------+-----------------------+-----------+----------+---------+----------+-------------+--------------+-------------
 id     | integer               |           |          |         | plain    |             |              | 
 name   | character varying(50) |           |          |         | extended |             |              | 
 age    | integer               |           |          |         | plain    |             |              | 
View definition:
 SELECT id,
    name,
    age
   FROM test_schema.test_tbl
  WHERE age > 30;
Access method: heap

-- Expect 1 row: Carol
SELECT * FROM test_schema.mv_test_view_nodata ORDER BY id; 
 id | name  | age 
----+-------+-----
  3 | Carol |  35
(1 row)

-- Validation for mv_test_view_colnames
\d+ test_schema.mv_test_view_colnames
                                   Materialized view "test_schema.mv_test_view_colnames"
   Column    |         Type          | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
-------------+-----------------------+-----------+----------+---------+----------+-------------+--------------+-------------
 person_id   | integer               |           |          |         | plain    |             |              | 
 person_name | character varying(50) |           |          |         | extended |             |              | 
 person_age  | integer               |           |          |         | plain    |             |              | 
View definition:
 SELECT id AS person_id,
    name AS person_name,
    age AS person_age
   FROM test_schema.test_tbl
  WHERE age > 30;
Access method: heap

-- Expect 1 row: Carol
SELECT * FROM test_schema.mv_test_view_colnames ORDER BY person_id; 
 person_id | person_name | person_age 
-----------+-------------+------------
         3 | Carol       |         35
(1 row)

-- Validation for mv_test_view_method
\d+ test_schema.mv_test_view_method
                                  Materialized view "test_schema.mv_test_view_method"
 Column |         Type          | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
--------+-----------------------+-----------+----------+---------+----------+-------------+--------------+-------------
 id     | integer               |           |          |         | plain    |             |              | 
 name   | character varying(50) |           |          |         | extended |             |              | 
 age    | integer               |           |          |         | plain    |             |              | 
View definition:
 SELECT id,
    name,
    age
   FROM test_schema.test_tbl
  WHERE age > 30;
Access method: heap

-- Expect 1 row: Carol
SELECT * FROM test_schema.mv_test_view_method ORDER BY id; 
 id | name  | age 
----+-------+-----
  3 | Carol |  35
(1 row)

-- Validation for mv_test_view_storage
\d+ test_schema.mv_test_view_storage
                                 Materialized view "test_schema.mv_test_view_storage"
 Column |         Type          | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
--------+-----------------------+-----------+----------+---------+----------+-------------+--------------+-------------
 id     | integer               |           |          |         | plain    |             |              | 
 name   | character varying(50) |           |          |         | extended |             |              | 
 age    | integer               |           |          |         | plain    |             |              | 
View definition:
 SELECT id,
    name,
    age
   FROM test_schema.test_tbl
  WHERE age > 30;
Access method: heap
Options: fillfactor=70

-- Expect 1 row: Carol
SELECT * FROM test_schema.mv_test_view_storage ORDER BY id; 
 id | name  | age 
----+-------+-----
  3 | Carol |  35
(1 row)

-- Validation for mv_test_view_tablespace
\d+ test_schema.mv_test_view_tablespace
                                Materialized view "test_schema.mv_test_view_tablespace"
 Column |         Type          | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
--------+-----------------------+-----------+----------+---------+----------+-------------+--------------+-------------
 id     | integer               |           |          |         | plain    |             |              | 
 name   | character varying(50) |           |          |         | extended |             |              | 
 age    | integer               |           |          |         | plain    |             |              | 
View definition:
 SELECT id,
    name,
    age
   FROM test_schema.test_tbl
  WHERE age > 30;
Access method: heap

-- Expect 1 row: Carol
SELECT * FROM test_schema.mv_test_view_tablespace ORDER BY id; 
 id | name  | age 
----+-------+-----
  3 | Carol |  35
(1 row)

-- Validation for view_test_default
\d+ public.view_test_default
                         View "public.view_test_default"
   Column    |  Type   | Collation | Nullable | Default | Storage  | Description 
-------------+---------+-----------+----------+---------+----------+-------------
 id          | integer |           |          |         | plain    | 
 description | text    |           |          |         | extended | 
View definition:
 SELECT id,
    description
   FROM test_schema.test_tbl_no_pk
  WHERE id > 1;

-- Expect 1 row: Second description
SELECT * FROM public.view_test_default ORDER BY id; 
 id |    description     
----+--------------------
  2 | Second description
(1 row)

-- Validation for view_depends_on_default
\d+ test_schema.view_depends_on_default
                   View "test_schema.view_depends_on_default"
   Column    |  Type   | Collation | Nullable | Default | Storage  | Description 
-------------+---------+-----------+----------+---------+----------+-------------
 id          | integer |           |          |         | plain    | 
 description | text    |           |          |         | extended | 
View definition:
 SELECT id,
    description
   FROM view_test_default
  WHERE id > 1;

-- Expect 1 row: Second description
SELECT * FROM test_schema.view_depends_on_default ORDER BY id; 
 id |    description     
----+--------------------
  2 | Second description
(1 row)

-- Validation for mv_depends_on_test_schema
\d+ public.mv_depends_on_test_schema
                                 Materialized view "public.mv_depends_on_test_schema"
 Column |         Type          | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
--------+-----------------------+-----------+----------+---------+----------+-------------+--------------+-------------
 id     | integer               |           |          |         | plain    |             |              | 
 name   | character varying(50) |           |          |         | extended |             |              | 
 age    | integer               |           |          |         | plain    |             |              | 
View definition:
 SELECT id,
    name,
    age
   FROM test_schema.mv_test_view;
Access method: heap

-- Expect 1 row: Carol
SELECT * FROM public.mv_depends_on_test_schema ORDER BY id; 
 id | name  | age 
----+-------+-----
  3 | Carol |  35
(1 row)

-- Validation for view_depends_on_mv
\d+ public.view_depends_on_mv
                             View "public.view_depends_on_mv"
 Column |         Type          | Collation | Nullable | Default | Storage  | Description 
--------+-----------------------+-----------+----------+---------+----------+-------------
 id     | integer               |           |          |         | plain    | 
 name   | character varying(50) |           |          |         | extended | 
View definition:
 SELECT id,
    name
   FROM mv_depends_on_test_schema
  WHERE age > 30;

-- Expect 1 row: Carol
SELECT * FROM public.view_depends_on_mv ORDER BY id; 
 id | name  
----+-------
  3 | Carol
(1 row)

-- Validation for mv_depends_on_mv
\d+ public.mv_depends_on_mv
                                      Materialized view "public.mv_depends_on_mv"
 Column |         Type          | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
--------+-----------------------+-----------+----------+---------+----------+-------------+--------------+-------------
 id     | integer               |           |          |         | plain    |             |              | 
 name   | character varying(50) |           |          |         | extended |             |              | 
View definition:
 SELECT id,
    name
   FROM view_depends_on_mv;
Access method: heap

-- Expect 1 row: Carol
SELECT * FROM public.mv_depends_on_mv ORDER BY id; 
 id | name  
----+-------
  3 | Carol
(1 row)

