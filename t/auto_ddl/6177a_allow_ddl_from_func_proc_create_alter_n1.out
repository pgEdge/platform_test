-- Prepared statement for spock.tables to list tables and associated indexes
PREPARE spocktab AS SELECT nspname, relname, set_name FROM spock.tables WHERE relname LIKE '%' || $1 || '%' ORDER BY relid;
PREPARE
-- Turn on the allow_ddl_from_functions GUC
ALTER SYSTEM SET spock.allow_ddl_from_functions = on;
WARNING:  This DDL statement will not be replicated.
ALTER SYSTEM
SELECT pg_reload_conf();
 pg_reload_conf 
----------------
 t
(1 row)

SELECT pg_sleep(0.5);
 pg_sleep 
----------
 
(1 row)

SHOW spock.allow_ddl_from_functions;
 spock.allow_ddl_from_functions 
--------------------------------
 on
(1 row)

-- Create simple tables
CREATE TABLE tab1_proc_on (id INT PRIMARY KEY, col1 TEXT, col2 INT);
INFO:  DDL statement replicated.
CREATE TABLE
CREATE TABLE tab2_func_on (id INT PRIMARY KEY, col1 TEXT, col2 INT, col3 TEXT, col4 INT, col5 TEXT, col6 INT, col7 TEXT, col8 INT);
INFO:  DDL statement replicated.
CREATE TABLE
-- Create tables within anonymous blocks
DO $$
BEGIN
  EXECUTE 'CREATE TABLE tab3_anon_on (id INT, col1 TEXT, col2 INT)';
  EXECUTE 'CREATE TABLE tab6_anon_off (id INT PRIMARY KEY, col1 TEXT, col2 INT)';
END
$$;
INFO:  DDL statement replicated.
INFO:  DDL statement replicated.
DO
CREATE TABLE tab4_proc_off (id INT PRIMARY KEY, col1 TEXT, col2 INT);
INFO:  DDL statement replicated.
CREATE TABLE
CREATE TABLE tab5_func_off (id INT PRIMARY KEY, col1 TEXT, col2 INT, col3 TEXT, col4 INT, col5 TEXT, col6 INT, col7 TEXT, col8 INT);
INFO:  DDL statement replicated.
CREATE TABLE
-- Insert sample data
INSERT INTO tab1_proc_on (id, col1, col2) VALUES (1, 'data1', 100);
INSERT 0 1
INSERT INTO tab2_func_on (id, col1, col2, col3, col4, col5, col6, col7, col8) VALUES (1, 'data2', 200, 'data3', 300, 'data4', 400, 'data5', 500);
INSERT 0 1
INSERT INTO tab3_anon_on (id, col1, col2) VALUES (1, 'data1', 100);
INSERT 0 1
INSERT INTO tab4_proc_off (id, col1, col2) VALUES (1, 'data1', 100);
INSERT 0 1
INSERT INTO tab5_func_off (id, col1, col2, col3, col4, col5, col6, col7, col8) VALUES (1, 'data2', 200, 'data3', 300, 'data4', 400, 'data5', 500);
INSERT 0 1
INSERT INTO tab6_anon_off (id, col1, col2) VALUES (1, 'data1', 100);
INSERT 0 1
-- Create procedure that internally executes a DDL to add columns dynamically to the passed table
CREATE OR REPLACE PROCEDURE add_column_to_table_proc(
    table_name VARCHAR(50),
    varname VARCHAR(50),
    vartype VARCHAR(50),
    IN OUT success BOOLEAN
) AS $$
BEGIN
    EXECUTE 'ALTER TABLE ' || table_name || ' ADD COLUMN ' || varname || ' ' || vartype;
    success := true;
EXCEPTION
    WHEN OTHERS THEN
        RAISE NOTICE 'Error: %', SQLERRM;
        success := false;
END;
$$ LANGUAGE plpgsql;
INFO:  DDL statement replicated.
CREATE PROCEDURE
-- Create function that internally exdcutes a DDL to drop columns dynamically from the passed table
CREATE OR REPLACE FUNCTION remove_column_from_table(
    table_name VARCHAR(50),
    column_name VARCHAR(50)
) RETURNS BOOLEAN AS $$
BEGIN
    EXECUTE 'ALTER TABLE ' || table_name || ' DROP COLUMN ' || column_name;
    RETURN TRUE;
EXCEPTION
    WHEN OTHERS THEN
        RETURN FALSE;
END;
$$ LANGUAGE plpgsql;
INFO:  DDL statement replicated.
CREATE FUNCTION
-- Create the tab_emp table
CREATE TABLE tab_emp (
    id INT PRIMARY KEY,
    name VARCHAR(255),
    salary NUMERIC
);
INFO:  DDL statement replicated.
CREATE TABLE
-- Create a trigger function
CREATE OR REPLACE FUNCTION employee_insert_trigger()
RETURNS TRIGGER AS $$
BEGIN
    EXECUTE 'CREATE SCHEMA ' || NEW.name;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
INFO:  DDL statement replicated.
CREATE FUNCTION
-- Create the trigger to execute the function after an insert
CREATE TRIGGER employee_insert_trigger
AFTER INSERT
ON tab_emp
FOR EACH ROW
EXECUTE FUNCTION employee_insert_trigger();
INFO:  DDL statement replicated.
CREATE TRIGGER
EXECUTE spocktab('tab'); 
 nspname |    relname    |      set_name       
---------+---------------+---------------------
 public  | tab1_proc_on  | default
 public  | tab2_func_on  | default
 public  | tab3_anon_on  | default_insert_only
 public  | tab6_anon_off | default
 public  | tab4_proc_off | default
 public  | tab5_func_off | default
 public  | tab_emp       | default
(7 rows)

-- Add a primary key to the table tab3 within an anonymous block
DO $$
BEGIN
  EXECUTE 'ALTER TABLE tab3_anon_on ADD PRIMARY KEY (id)';
END
$$;
INFO:  DDL statement replicated.
DO
-- Execute the procedure to add columns
CALL add_column_to_table_proc('tab1_proc_on', 'new_col1', 'CHAR', true);
INFO:  DDL statement replicated.
 success 
---------
 t
(1 row)

CALL add_column_to_table_proc('tab1_proc_on', 'new_col2', 'BOOL', true);
INFO:  DDL statement replicated.
 success 
---------
 t
(1 row)

-- Execute the function to drop columns
SELECT remove_column_from_table('tab2_func_on', 'col3');
INFO:  DDL statement replicated.
 remove_column_from_table 
--------------------------
 t
(1 row)

SELECT remove_column_from_table('tab2_func_on', 'col5');
INFO:  DDL statement replicated.
 remove_column_from_table 
--------------------------
 t
(1 row)

-- Trigger DDL execution via trigger, that should create a schema named john and auto replicate it
INSERT INTO tab_emp (id, name, salary) VALUES (1, 'John', 50000);
INFO:  DDL statement replicated.
INSERT 0 1
EXECUTE spocktab('tab'); 
 nspname |    relname    | set_name 
---------+---------------+----------
 public  | tab1_proc_on  | default
 public  | tab2_func_on  | default
 public  | tab3_anon_on  | default
 public  | tab6_anon_off | default
 public  | tab4_proc_off | default
 public  | tab5_func_off | default
 public  | tab_emp       | default
(7 rows)

------
-- Turning allow_ddl_from_functions GUC off
------
-- Turn off the allow_ddl_from_functions GUC
ALTER SYSTEM SET spock.allow_ddl_from_functions = off;
WARNING:  This DDL statement will not be replicated.
ALTER SYSTEM
SELECT pg_reload_conf();
 pg_reload_conf 
----------------
 t
(1 row)

SELECT pg_sleep(0.5);
 pg_sleep 
----------
 
(1 row)

SHOW spock.allow_ddl_from_functions;
 spock.allow_ddl_from_functions 
--------------------------------
 off
(1 row)

-- Run anonymous block to create tab7
DO $$
BEGIN
  EXECUTE 'CREATE TABLE tab7_anon_off (id INT, col1 TEXT, col2 INT)';
  EXECUTE 'ALTER TABLE tab6_anon_off DROP COLUMN id';
END
$$;
DO
-- Execute the procedure to add columns
CALL add_column_to_table_proc('tab4_proc_off', 'new_col1', 'CHAR', true);
 success 
---------
 t
(1 row)

CALL add_column_to_table_proc('tab4_proc_off', 'new_col2', 'BOOL', true);
 success 
---------
 t
(1 row)

-- Execute the function to drop columns
SELECT remove_column_from_table('tab5_func_off', 'col3');
 remove_column_from_table 
--------------------------
 t
(1 row)

SELECT remove_column_from_table('tab5_func_off', 'col5');
 remove_column_from_table 
--------------------------
 t
(1 row)

-- Trigger DDL execution via trigger
INSERT INTO tab_emp (id, name, salary) VALUES (2, 'Alice', 60000);
INSERT 0 1
-- Validate table structures and schemas
\df add_column*
                                                                                List of functions
 Schema |           Name           | Result data type |                                                Argument data types                                                 | Type 
--------+--------------------------+------------------+--------------------------------------------------------------------------------------------------------------------+------
 public | add_column_to_table_proc |                  | IN table_name character varying, IN varname character varying, IN vartype character varying, INOUT success boolean | proc
(1 row)

\df remove_column*
                                                     List of functions
 Schema |           Name           | Result data type |                     Argument data types                     | Type 
--------+--------------------------+------------------+-------------------------------------------------------------+------
 public | remove_column_from_table | boolean          | table_name character varying, column_name character varying | func
(1 row)

\df employee_insert_trigger
                                List of functions
 Schema |          Name           | Result data type | Argument data types | Type 
--------+-------------------------+------------------+---------------------+------
 public | employee_insert_trigger | trigger          |                     | func
(1 row)

\d+ tab1_proc_on
                                          Table "public.tab1_proc_on"
  Column  |     Type     | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
----------+--------------+-----------+----------+---------+----------+-------------+--------------+-------------
 id       | integer      |           | not null |         | plain    |             |              | 
 col1     | text         |           |          |         | extended |             |              | 
 col2     | integer      |           |          |         | plain    |             |              | 
 new_col1 | character(1) |           |          |         | extended |             |              | 
 new_col2 | boolean      |           |          |         | plain    |             |              | 
Indexes:
    "tab1_proc_on_pkey" PRIMARY KEY, btree (id)
Access method: heap

\d+ tab2_func_on
                                       Table "public.tab2_func_on"
 Column |  Type   | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
--------+---------+-----------+----------+---------+----------+-------------+--------------+-------------
 id     | integer |           | not null |         | plain    |             |              | 
 col1   | text    |           |          |         | extended |             |              | 
 col2   | integer |           |          |         | plain    |             |              | 
 col4   | integer |           |          |         | plain    |             |              | 
 col6   | integer |           |          |         | plain    |             |              | 
 col7   | text    |           |          |         | extended |             |              | 
 col8   | integer |           |          |         | plain    |             |              | 
Indexes:
    "tab2_func_on_pkey" PRIMARY KEY, btree (id)
Access method: heap

\d+ tab3_anon_on
                                       Table "public.tab3_anon_on"
 Column |  Type   | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
--------+---------+-----------+----------+---------+----------+-------------+--------------+-------------
 id     | integer |           | not null |         | plain    |             |              | 
 col1   | text    |           |          |         | extended |             |              | 
 col2   | integer |           |          |         | plain    |             |              | 
Indexes:
    "tab3_anon_on_pkey" PRIMARY KEY, btree (id)
Access method: heap

\d+ tab4_proc_off
                                          Table "public.tab4_proc_off"
  Column  |     Type     | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
----------+--------------+-----------+----------+---------+----------+-------------+--------------+-------------
 id       | integer      |           | not null |         | plain    |             |              | 
 col1     | text         |           |          |         | extended |             |              | 
 col2     | integer      |           |          |         | plain    |             |              | 
 new_col1 | character(1) |           |          |         | extended |             |              | 
 new_col2 | boolean      |           |          |         | plain    |             |              | 
Indexes:
    "tab4_proc_off_pkey" PRIMARY KEY, btree (id)
Access method: heap

\d+ tab5_func_off
                                      Table "public.tab5_func_off"
 Column |  Type   | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
--------+---------+-----------+----------+---------+----------+-------------+--------------+-------------
 id     | integer |           | not null |         | plain    |             |              | 
 col1   | text    |           |          |         | extended |             |              | 
 col2   | integer |           |          |         | plain    |             |              | 
 col4   | integer |           |          |         | plain    |             |              | 
 col6   | integer |           |          |         | plain    |             |              | 
 col7   | text    |           |          |         | extended |             |              | 
 col8   | integer |           |          |         | plain    |             |              | 
Indexes:
    "tab5_func_off_pkey" PRIMARY KEY, btree (id)
Access method: heap

\d+ tab6_anon_off
                                      Table "public.tab6_anon_off"
 Column |  Type   | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
--------+---------+-----------+----------+---------+----------+-------------+--------------+-------------
 col1   | text    |           |          |         | extended |             |              | 
 col2   | integer |           |          |         | plain    |             |              | 
Access method: heap

\d+ tab7_anon_off
                                      Table "public.tab7_anon_off"
 Column |  Type   | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
--------+---------+-----------+----------+---------+----------+-------------+--------------+-------------
 id     | integer |           |          |         | plain    |             |              | 
 col1   | text    |           |          |         | extended |             |              | 
 col2   | integer |           |          |         | plain    |             |              | 
Access method: heap

\d+ tab_emp
                                                 Table "public.tab_emp"
 Column |          Type          | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
--------+------------------------+-----------+----------+---------+----------+-------------+--------------+-------------
 id     | integer                |           | not null |         | plain    |             |              | 
 name   | character varying(255) |           |          |         | extended |             |              | 
 salary | numeric                |           |          |         | main     |             |              | 
Indexes:
    "tab_emp_pkey" PRIMARY KEY, btree (id)
Triggers:
    employee_insert_trigger AFTER INSERT ON tab_emp FOR EACH ROW EXECUTE FUNCTION employee_insert_trigger()
Access method: heap

\dn john
List of schemas
 Name | Owner 
------+-------
 john | rocky
(1 row)

\dn alice
List of schemas
 Name  | Owner 
-------+-------
 alice | rocky
(1 row)

EXECUTE spocktab('tab'); 
 nspname |    relname    | set_name 
---------+---------------+----------
 public  | tab1_proc_on  | default
 public  | tab2_func_on  | default
 public  | tab3_anon_on  | default
 public  | tab6_anon_off | default
 public  | tab4_proc_off | default
 public  | tab5_func_off | default
 public  | tab_emp       | default
 public  | tab7_anon_off | 
(8 rows)

