-- Prepared statement for spock.tables to list parent and child tables as parent table name will be contained in partition name
PREPARE spocktab AS SELECT nspname, relname, set_name FROM spock.tables WHERE relname LIKE '%' || $1 || '%' ORDER BY relid;
PREPARE
-----------------------------
-- Hash Partitioning
-----------------------------
-- Create a hash partitioned table with primary key
CREATE TABLE sales_hash (
    sale_id INT,
    sale_date DATE,
    sale_amount DECIMAL,
    PRIMARY KEY (sale_id, sale_date)
) PARTITION BY HASH (sale_id);
INFO:  DDL statement replicated.
CREATE TABLE
-- Add partitions to the sales_hash table
CREATE TABLE sales_hash_1 PARTITION OF sales_hash
    FOR VALUES WITH (MODULUS 4, REMAINDER 0);
INFO:  DDL statement replicated.
CREATE TABLE
CREATE TABLE sales_hash_2 PARTITION OF sales_hash
    FOR VALUES WITH (MODULUS 4, REMAINDER 1);
INFO:  DDL statement replicated.
CREATE TABLE
CREATE TABLE sales_hash_3 PARTITION OF sales_hash
    FOR VALUES WITH (MODULUS 4, REMAINDER 2);
INFO:  DDL statement replicated.
CREATE TABLE
CREATE TABLE sales_hash_4 PARTITION OF sales_hash
    FOR VALUES WITH (MODULUS 4, REMAINDER 3);
INFO:  DDL statement replicated.
CREATE TABLE
-- Insert data into the sales_hash table
INSERT INTO sales_hash (sale_id, sale_date, sale_amount) VALUES
(1, '2023-01-01', 100.0),
(2, '2023-01-02', 200.0),
(3, '2023-01-03', 150.0),
(4, '2023-01-04', 250.0);
INSERT 0 4
EXECUTE spocktab('sales_hash'); -- Expect both parent and child tables in default repset
 nspname |   relname    | set_name 
---------+--------------+----------
 public  | sales_hash   | default
 public  | sales_hash_1 | default
 public  | sales_hash_2 | default
 public  | sales_hash_3 | default
 public  | sales_hash_4 | default
(5 rows)

SELECT * FROM sales_hash ORDER BY sale_id; -- Expect 4 rows
 sale_id | sale_date  | sale_amount 
---------+------------+-------------
       1 | 2023-01-01 |       100.0
       2 | 2023-01-02 |       200.0
       3 | 2023-01-03 |       150.0
       4 | 2023-01-04 |       250.0
(4 rows)

-- Validate structure and data after adding new partition
\d sales_hash_1
              Table "public.sales_hash_1"
   Column    |  Type   | Collation | Nullable | Default 
-------------+---------+-----------+----------+---------
 sale_id     | integer |           | not null | 
 sale_date   | date    |           | not null | 
 sale_amount | numeric |           |          | 
Partition of: sales_hash FOR VALUES WITH (modulus 4, remainder 0)
Indexes:
    "sales_hash_1_pkey" PRIMARY KEY, btree (sale_id, sale_date)

\d sales_hash_2
              Table "public.sales_hash_2"
   Column    |  Type   | Collation | Nullable | Default 
-------------+---------+-----------+----------+---------
 sale_id     | integer |           | not null | 
 sale_date   | date    |           | not null | 
 sale_amount | numeric |           |          | 
Partition of: sales_hash FOR VALUES WITH (modulus 4, remainder 1)
Indexes:
    "sales_hash_2_pkey" PRIMARY KEY, btree (sale_id, sale_date)

\d sales_hash_3
              Table "public.sales_hash_3"
   Column    |  Type   | Collation | Nullable | Default 
-------------+---------+-----------+----------+---------
 sale_id     | integer |           | not null | 
 sale_date   | date    |           | not null | 
 sale_amount | numeric |           |          | 
Partition of: sales_hash FOR VALUES WITH (modulus 4, remainder 2)
Indexes:
    "sales_hash_3_pkey" PRIMARY KEY, btree (sale_id, sale_date)

\d sales_hash_4
              Table "public.sales_hash_4"
   Column    |  Type   | Collation | Nullable | Default 
-------------+---------+-----------+----------+---------
 sale_id     | integer |           | not null | 
 sale_date   | date    |           | not null | 
 sale_amount | numeric |           |          | 
Partition of: sales_hash FOR VALUES WITH (modulus 4, remainder 3)
Indexes:
    "sales_hash_4_pkey" PRIMARY KEY, btree (sale_id, sale_date)

\d sales_hash
         Partitioned table "public.sales_hash"
   Column    |  Type   | Collation | Nullable | Default 
-------------+---------+-----------+----------+---------
 sale_id     | integer |           | not null | 
 sale_date   | date    |           | not null | 
 sale_amount | numeric |           |          | 
Partition key: HASH (sale_id)
Indexes:
    "sales_hash_pkey" PRIMARY KEY, btree (sale_id, sale_date)
Number of partitions: 4 (Use \d+ to list them.)

EXECUTE spocktab('sales_hash'); -- Expect all partitions to be listed
 nspname |   relname    | set_name 
---------+--------------+----------
 public  | sales_hash   | default
 public  | sales_hash_1 | default
 public  | sales_hash_2 | default
 public  | sales_hash_3 | default
 public  | sales_hash_4 | default
(5 rows)

SELECT * FROM sales_hash ORDER BY sale_id; -- Expect 4 rows
 sale_id | sale_date  | sale_amount 
---------+------------+-------------
       1 | 2023-01-01 |       100.0
       2 | 2023-01-02 |       200.0
       3 | 2023-01-03 |       150.0
       4 | 2023-01-04 |       250.0
(4 rows)

-- Create a hash partitioned table without primary key
CREATE TABLE products_hash (
    product_id INT,
    product_date DATE,
    product_name TEXT
) PARTITION BY HASH (product_id);
INFO:  DDL statement replicated.
CREATE TABLE
-- Add partitions to the products_hash table
CREATE TABLE products_hash_1 PARTITION OF products_hash
    FOR VALUES WITH (MODULUS 4, REMAINDER 0);
INFO:  DDL statement replicated.
CREATE TABLE
CREATE TABLE products_hash_2 PARTITION OF products_hash
    FOR VALUES WITH (MODULUS 4, REMAINDER 1);
INFO:  DDL statement replicated.
CREATE TABLE
CREATE TABLE products_hash_3 PARTITION OF products_hash
    FOR VALUES WITH (MODULUS 4, REMAINDER 2);
INFO:  DDL statement replicated.
CREATE TABLE
CREATE TABLE products_hash_4 PARTITION OF products_hash
    FOR VALUES WITH (MODULUS 4, REMAINDER 3);
INFO:  DDL statement replicated.
CREATE TABLE
-- Insert data into the products_hash table
INSERT INTO products_hash (product_id, product_date, product_name) VALUES
(1, '2023-01-01', 'Laptop'),
(2, '2023-01-02', 'Shirt'),
(3, '2023-01-03', 'Smartphone'),
(4, '2023-01-04', 'Tablet');
INSERT 0 4
-- Validate structure and data
\d+ products_hash
                                   Partitioned table "public.products_hash"
    Column    |  Type   | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
--------------+---------+-----------+----------+---------+----------+-------------+--------------+-------------
 product_id   | integer |           |          |         | plain    |             |              | 
 product_date | date    |           |          |         | plain    |             |              | 
 product_name | text    |           |          |         | extended |             |              | 
Partition key: HASH (product_id)
Partitions: products_hash_1 FOR VALUES WITH (modulus 4, remainder 0),
            products_hash_2 FOR VALUES WITH (modulus 4, remainder 1),
            products_hash_3 FOR VALUES WITH (modulus 4, remainder 2),
            products_hash_4 FOR VALUES WITH (modulus 4, remainder 3)

EXECUTE spocktab('products_hash'); -- Expect both parent and child tables in default_insert_only set
 nspname |     relname     |      set_name       
---------+-----------------+---------------------
 public  | products_hash   | default_insert_only
 public  | products_hash_1 | default_insert_only
 public  | products_hash_2 | default_insert_only
 public  | products_hash_3 | default_insert_only
 public  | products_hash_4 | default_insert_only
(5 rows)

SELECT * FROM products_hash ORDER BY product_id; -- Expect 4 rows
 product_id | product_date | product_name 
------------+--------------+--------------
          1 | 2023-01-01   | Laptop
          2 | 2023-01-02   | Shirt
          3 | 2023-01-03   | Smartphone
          4 | 2023-01-04   | Tablet
(4 rows)

-- Alter the products_hash table to add a primary key
ALTER TABLE products_hash ADD PRIMARY KEY (product_id, product_date);
INFO:  DDL statement replicated.
ALTER TABLE
-- Validate structure and data after adding primary key
\d products_hash
        Partitioned table "public.products_hash"
    Column    |  Type   | Collation | Nullable | Default 
--------------+---------+-----------+----------+---------
 product_id   | integer |           | not null | 
 product_date | date    |           | not null | 
 product_name | text    |           |          | 
Partition key: HASH (product_id)
Indexes:
    "products_hash_pkey" PRIMARY KEY, btree (product_id, product_date)
Number of partitions: 4 (Use \d+ to list them.)

\d products_hash_1
             Table "public.products_hash_1"
    Column    |  Type   | Collation | Nullable | Default 
--------------+---------+-----------+----------+---------
 product_id   | integer |           | not null | 
 product_date | date    |           | not null | 
 product_name | text    |           |          | 
Partition of: products_hash FOR VALUES WITH (modulus 4, remainder 0)
Indexes:
    "products_hash_1_pkey" PRIMARY KEY, btree (product_id, product_date)

\d products_hash_2
             Table "public.products_hash_2"
    Column    |  Type   | Collation | Nullable | Default 
--------------+---------+-----------+----------+---------
 product_id   | integer |           | not null | 
 product_date | date    |           | not null | 
 product_name | text    |           |          | 
Partition of: products_hash FOR VALUES WITH (modulus 4, remainder 1)
Indexes:
    "products_hash_2_pkey" PRIMARY KEY, btree (product_id, product_date)

\d products_hash_3
             Table "public.products_hash_3"
    Column    |  Type   | Collation | Nullable | Default 
--------------+---------+-----------+----------+---------
 product_id   | integer |           | not null | 
 product_date | date    |           | not null | 
 product_name | text    |           |          | 
Partition of: products_hash FOR VALUES WITH (modulus 4, remainder 2)
Indexes:
    "products_hash_3_pkey" PRIMARY KEY, btree (product_id, product_date)

\d products_hash_4
             Table "public.products_hash_4"
    Column    |  Type   | Collation | Nullable | Default 
--------------+---------+-----------+----------+---------
 product_id   | integer |           | not null | 
 product_date | date    |           | not null | 
 product_name | text    |           |          | 
Partition of: products_hash FOR VALUES WITH (modulus 4, remainder 3)
Indexes:
    "products_hash_4_pkey" PRIMARY KEY, btree (product_id, product_date)

EXECUTE spocktab('products_hash'); -- Expect the replication set to change to default
 nspname |     relname     | set_name 
---------+-----------------+----------
 public  | products_hash   | default
 public  | products_hash_1 | default
 public  | products_hash_2 | default
 public  | products_hash_3 | default
 public  | products_hash_4 | default
(5 rows)

SELECT * FROM products_hash ORDER BY product_id; -- Expect 4 rows
 product_id | product_date | product_name 
------------+--------------+--------------
          1 | 2023-01-01   | Laptop
          2 | 2023-01-02   | Shirt
          3 | 2023-01-03   | Smartphone
          4 | 2023-01-04   | Tablet
(4 rows)

